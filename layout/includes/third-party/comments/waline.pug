- const { serverURL, option, pageview, meta } = theme.waline
- const { lazyload, count, use } = theme.comments

script.
  function loadWaline () {
    function initWaline () {
      const waline = Waline.init(Object.assign({
        el: '#waline-wrap',
        serverURL: '!{serverURL}',
        pageview: !{lazyload ? false : pageview},
        dark: 'html[data-theme="dark"]',
        path: window.location.pathname,
        imageUploader: (file) => {
            let headers = new Headers()
            let formdata = new FormData()
            formdata.append('image', file)
            headers.append('Authorization', 'Client-ID ' + '!{theme.waline.option.ImgurID}')
            return fetch('https://api.imgur.com/3/image', {
              method: 'POST',
              headers: headers,
              async: true,
              crossDomain: true,
              processData: false,
              contentType: false,
              body: formdata
            })
              .then((resp) => resp.json())
              .then((resp) => resp.data.link)
          },
        comment: !{lazyload ? false : count},
      }, !{JSON.stringify(option)}))
    }

    const walineCSSLoad = document.getElementById('waline-css')

    if (typeof Waline === 'object') {
      walineCSSLoad ? initWaline() : getCSS('!{url_for(theme.asset.waline_css)}','waline-css').then(initWaline)
    }
    else {
      getCSS('!{url_for(theme.asset.waline_css)}','waline-css').then(() => {
        getScript('!{url_for(theme.asset.waline_js)}').then(initWaline)
      })
      if (!{meta}) getCSS('!{url_for(theme.asset.waline_meta_css)}')
    }
  }

  if ('!{use[0]}' === 'Waline' || !!{lazyload}) {
    if (!{lazyload}) anzhiyu.loadComment(document.getElementById('waline-wrap'),loadWaline)
    else setTimeout(loadWaline, 0)
  } else {
    function loadOtherComment () {
      loadWaline()
    }
  }
  

